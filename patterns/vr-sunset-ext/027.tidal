hush

do
  let slowness = "<1 3 4 3 2>"
      beepOn x = every (range 1 0 $ (cI 0 "81")) g $ x
      rfreq = segment 1
      chain x = one 0.4 $ roll 0.4 $ stutWith "<3 4>" "3e" id $ slow slowness $ x
  d1
    $ limit
    $ reduce
    $ shift
    $ sb 0.1 ("1s" ~>)
    $ shift
    $ useIter (iter 8)
    $ useExtra (iter "<8 4 2 16>")
    $ foldEvery [2,3] rev
    $ shift
    $ stack [
      kickOn $ chain $ midichan 2 # note "c3" # s "rytm"
      , perc1On $ dg3 $ off "10s" id $ ("1e" ~>) $ stutWith 3 "3e" id $ slow slowness $ midichan 6 # note "c3" # s "rytm"
      , perc1On $ dg3 $ off "13s" id $ ("3s" ~>) $ stutWith 3 "3e" id $ slow slowness $ midichan 7 # note "c3" # s "rytm"
      , snareOn $ (0.5 ~>) $ midichan 3 # note "c3" # s "rytm"
      , perc2On $ (0.25 <~) $ midichan 0 # note "<c3 b2 a2>" # s "rytm" 
        # note (segment 1 $ shiftBy 666 $ choose [-24,-23])
        # legato "<1 1 1 1.5 1 2>"
      , padOn $ off "3e" id $ midichan 4 # note "c3" # s "rytm"
      , hatOn $ sb 0.2 (|+ midichan 1)  $ shift
        $ struct "{1*4 1*2 1*2 1 ~ ~ ~}%4" $ midichan 10 # note "c3" # s "rytm"
      , beepOn $ (0.25 ~>) $ foldEvery [1,2,3] (slow 2) $ midichan 1 # note "c3" # s "rytm"
      , pad2On $ slow 6 $ midichan 5 # note "<c3 f3>" # s "rytm" # legato 0.7
      , perf4 (fast 2 $ segment 1 $ range 0 127 $ shrand 82934)
      , perf1 (fast 2 $ segment 1 $ range 0 127 $ shrand 287711)
      , rytmfiltercutoff (segment 1 $ range 30 110 $ slow 50 tri) # midichan 0
      , rytmfiltercutoff (segment 1 $ range 10 120 $ slow 43 tri) # midichan 1
      , lfospeed (segment 1 $ range 70 100 $ shrand 4455) # midichan 0
      , lfomult (segment 1 $ range 2 5 $ shrand 5566) # midichan 0
      , scene (segment 1 $ range 0 sceneRange $ shrand 272711)
      , harmorOn $ stack [
        chain $ note "-12" # s "harmor"
        , ccv (rfreq $ ccrand 10 100 133) # filter1
        , ccv (rfreq $ ccrand 10 100 233) # filter2
        , ccv (rfreq $ ccrand 0 127 333) # unidetune
        , ccv (rfreq $ ccrand 0 64 433) # phwidth
        , ccv (rfreq $ ccrand 40 80 38282) # phspeed
        , ccv (rfreq $ ccrand 5 127 533) # envattack
        , ccv (rfreq $ ccrand 0 127 7283) # envdecay
        , ccv (rfreq $ ccrand 100 127 633 ) # filter1width
        , ccv (rfreq $ ccrand 0 127 733 ) # filter1env
        , ccv (rfreq $ ccrand 100 127 833 ) # filter2width
        , ccv (rfreq $ ccrand 0 127 933 ) # filter2env
        , ccv (rfreq $ ccrand 0 127 1033) # timbre
        , ccv (rfreq $ ccrand 64 64 1133) # amprel
        , ccv (rfreq $ ccrand 0 127 7) # harm
      ] # speed007chan
    ] # cps (160/120/2)

let chain = id 

d1 $  ccv (ccrand 10 100 133) # filter1 # speed008chan

hush


    d1 $ fast 4 $ ccv (segment 1 $ range 0 127 $ slow 3 rand) # s "harmor" # midichan 0 # unidetune