-- real meme 004

hush

do
  let pat = "t(<3 2 1 5>,16,<3 1 5>)"
      rfreq = segment (1/4)
      minTempoSpot = (range 1 0.33 $ (cF 0 "88"))
      maxTempoSpot = (range 1 1.5 $ (cF 0 "88"))
      kickAmpIf f x = every (range 0 1 $ (cI 0 "73")) f $ x
      voxAmpIf f x = every (range 0 1 $ (cI 0 "81")) f $ x
      loopFreq x = sometimesBy (cF 0 "80") (# ccv 1) $ x
  d1
    $ cpsDisc minTempoSpot maxTempoSpot
    $ limit
    $ stack [
      padOn $ every 3 (superimpose (("<0.5 0.75 0.25 0.75>" <~) . (|+ note "<12 12 -12 12 -12>"))) 
        $ slow 8 $ midichan 4 # rytm # note "<c3>"
      -- kicks + hat
      , useIter (iter 16) $ reduce 
        $ hatIf(off 0.125 (# midichan 10))
        $ roll2 0.333
        $ one 0.333
        $ perc1If( sb 0.333 (# midichan 6))
        $ struct pat $ kickOn $ foldEvery [10, 9] (|- note (shiftBy 7 $ choose [1,2,-1,-2])) 
        $ midichan 2 # rytm # note "c3"
      -- kick/vox levels
      , kickAmpIf (# ccv 0) $ ccv 100 # ccn 16 # midichan 2 # s "rytm"
      , voxAmpIf (# ccv 0) $ ccv 90 # ccn 31 # midichan 2 # s "rytm"
      -- sample loop
      , fast 1.5 $ loopFreq $ (0.5 ~>) $ ccv 0 # ccn 30 # midichan 2 # s "rytm"
      -- snares
      , useIter (iter 16) $ reduce $ clapOn $ sb 0.5 (off (0.0625*3) (# midichan 1) ) 
        $ shift
        $ slow "<2 3 4>" $ (0.5 ~>) $ midichan 3 # rytm # note "c3"
      -- bass
      , useIter (iter 16) $ reduce $ perc2On $ degradeBy 0.2 $ shiftBy 3 $ (0.25 ~>) $ slow "<4 5 6>" $ midichan 0 # rytm # note "<c3 c2>"
      , perf1 (segment 1 $ range 0 127 $ shrand 111)
      , perf2 (segment 1 $ range 0 127 $ shrand 2829)
      , perf3 (segment 3 $ shiftBy 378310 $ choose [0,0,0,0,0,127])
      , perf4 (segment 1 $ range 0 127 $ shrand 829)
      , perf11 (segment 3 $ shiftBy 74 $ choose [0,0,0,0,127])
      -- harmor cc's
      , scene (segment 0.75 $ range 0 sceneRange $ shrand 9991)
      , useIter (iter 16) $ harmorOn $ reduce $ stack [
        dg3 $ slow 4 $ struct "1(3,8,<0 7 13>)" $ harmor # note "{0 -12 -6}%10" # speed007chan # gain 1   
        , ccv (rfreq $ ccrand 10 100 133) # filter1
        , ccv (rfreq $ ccrand 10 100 233) # filter2
        , ccv (rfreq $ ccrand 0 127 333) # unidetune
        , ccv (rfreq $ ccrand 0 64 433) # phwidth
        , ccv (rfreq $ ccrand 40 80 38282) # phspeed
        , ccv (rfreq $ ccrand 5 127 533) # envattack
        , ccv (rfreq $ ccrand 0 127 7283) # envdecay
        , ccv (rfreq $ ccrand 100 127 633 ) # filter1width
        , ccv (rfreq $ ccrand 127 127 733 ) # filter1env
        , ccv (rfreq $ ccrand 100 127 833 ) # filter2width
        , ccv (rfreq $ ccrand 127 127 933 ) # filter2env
        , ccv (rfreq $ ccrand 0 127 1033) # timbre
        , ccv (rfreq $ ccrand 64 64 1133) # amprel
        , ccv (rfreq $ ccrand 0 127 7) # harm
      ] # speed007chan
      , pad2On $ foldEvery [2,3,4] (slow "<1.25 0.75 0.5 2>") $ stack [
        note "<c3 b2 a2>"
        , sampleslot "{45 46 50}%2"
        , sampletune (segment 1 $ range 40 64 $ shrand 1818)
        , samplestart (segment 1 $ range 0 127 $ shrand 222)
        , sampleend (segment 1 $ range 0 127 $ shrand 333)
        , lfomult (segment 1 $ range 1 8 $ shrand 444)
        , lfospeed (segment 1 $ range 0 127 $ shrand 555)
        , lfodepth (segment 1 $ range 0 127 $ shrand 666)
        , rytmpan (segment 1 $ range 30 100 $ shrand 777)
      ] # s "rytm" # midichan 5
    ] # cps (160/120/2)

    hush

d1 $ stack [
  note "c3" # midichan 5 # s "rytm",
  sampleslot 48 # midichan 5 # s "rytm" ]

    d1 $ limit $ stack [ 
      slow 3 $ harmor # note "<c4 c3>" # legato 0.9
      , x (segment (1/3) $ range 0 127 $ shrand 82934)
      , y (segment (1/3) $ range 0 127 $ shrand 444) 
    ] # cps (160/120/2)

    hush