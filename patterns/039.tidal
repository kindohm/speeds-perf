-- kit 39 intro

do
  let samplepat = "1(<1 2 3>,<8 16>,<10 20 30 40 50>)"
      deg = dg3
  d1
    $ limit
    $ stack [
      padOn $ fast "<1 2 3 4 5 6>" $  midichan 4 # note "c3" # s "rytm"
      , pad2On $ slow 4 $ midichan 5 # note "c3"
      , perc2On $ deg $ struct samplepat $ midichan 8 # note "c3" # legato (range 1 5 $ shrand 8923104)
      , perc2On $ deg $ struct samplepat $ samplestart (range 0 100 $ shrand 82934) # midichan 8
      , perc2On $ deg $ struct samplepat $ sampleend (range 2 102 $ shrand 82934) # midichan 8
      , perc2On $ deg $ struct samplepat $ sampletune (range 40 98 $ shrand 1781) # midichan 8
      , clapOn $ dg5 $ shift $ struct "1(<1 2>,16,<11 43 55 66346234>)" 
        $ (|+ note "-24") $ midichan 6 # note (scale "ritusen" "{0 1 4 -1 2 -2 3 }%16")
    ] # s "rytm" # cps (200/120/2)

hush

-- kit 39
do
  let rfreq p = slow 4 $ segment 1 $ p
      elim p = ssb (cF 0 "96") (const $ stack [s "harmor" # speed007chan # note "c4" # gain 0.4]) $ p
  d1 
    $ limit
    $ elim
    $ cpsTri minTempo2 (range 1 2 $ (cF 0 "72")) 4.1
    $ cpsDisc minTempo maxTempo
    $ whenmod 30 25 (slow (4/3))
    $ whenmod 25 20 (slow (4/3))
    $ whenmod 20 15 (slow (4/3))
    $ useIter (iter 8)
    $ whenmod 12 9 (linger "3e")
    $ ssb 0.3 rev 
    $ shift
    $ foldEvery [2,3] (0.25 ~>)
    $ ssb 0.5 (slow 2)
    $ stack [
      padOn $ whenmod 14 9 (|+ note "-12") $ fast 16 $  midichan 4 # note "c3" # s "rytm"
      , pad2On $ slow 2 $ midichan 5 # note "c3" # s "rytm"
      , kickOn $ midichan "{3@6 2 2 2 2 2 2 2 2 2}%16" # note "c3" # s "rytm"
      , perc1On $ ((0.0625/2) ~>) $ midichan "{~@6 0 0 0 0 0 0 0 0 0}%16" # note "c3" # s "rytm"
      , hatOn $ (|+ midichan 10) $ ((0.0625/2) ~>) $ midichan "{~@6 0 0 0 0 0 0 0 0 0}%16" # note "c3" # s "rytm"
      , scene (segment 1 $ shiftBy 36733 $ range 0 sceneRange $ shrand 731)
      , harmorOn $ gain "{1@6 1 1 1 1 1 1 1 1 1}%16" # note "c4" # speed007chan # s "harmor"
      , harmorOn $ stack [
        ccv (rfreq $ ccrand 10 100 133) # filter1
        , ccv (rfreq $ ccrand 10 100 233) # filter2
        , ccv (rfreq $ ccrand 0 127 333) # unidetune
        , ccv (rfreq $ ccrand 0 64 433) # phwidth
        , ccv (rfreq $ ccrand 40 80 38282) # phspeed
        , ccv (rfreq $ ccrand 5 127 533) # envattack
        , ccv (rfreq $ ccrand 0 127 7283) # envdecay
        , ccv (rfreq $ ccrand 100 127 633 ) # filter1width
        , ccv (rfreq $ ccrand 127 127 733 ) # filter1env
        , ccv (rfreq $ ccrand 100 127 833 ) # filter2width
        , ccv (rfreq $ ccrand 127 127 933 ) # filter2env
        , ccv (rfreq $ ccrand 0 127 1033) # timbre
        , ccv (rfreq $ ccrand 64 64 1133) # amprel
        , ccv (rfreq $ ccrand 0 127 7) # harm
      ] # speed007chan
    ] # cps (200/120/2)

    hush