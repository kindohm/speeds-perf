

do
  let
     bdpat1 = struct "1(3,8)" $ midichan 2 # note "c3" # s "rytm"
     bdpat2 = struct "1(4,8,<0 5 7>)" $ midichan 2 # note "c3" # s "rytm"
     bdpat3 = struct "1 1*2" $ midichan 2 # note "c3" # s "rytm"
     bdpat4 = struct "1 1*4" $ midichan 2 # note "c3" # s "rytm"
     sdpat1 = struct "~ 1" $ midichan 1 # note "c3" # s "rytm"
     sdpat2 = struct "~ [~ ~ ~ 1]" $ midichan 1 # note "c3" # s "rytm"
     sdpat3 = (0.25 ~>) $ struct "1" $ midichan 1 # note "c3" # s "rytm"
  d1  
    $ degradeBy 0.5
    $ limit
    $ shift
    $ every 3 rev
    $ chunk "<4 8>" (iter (shiftBy 38923 $ choose [1,2,4,8,16]))
    $ stack [
      foldEvery [3,5] (|+ note "-7") 
        $ slow "<2 5 3 4>" 
        $ s "rytm" 
        # midichan 4 # note "<c3 bf3 c3 c3 bf3>" # legato 0.5
      , fast 1.25 $ foldEvery [4,7,10] (|- ccv 10) $ samplestart "<57 57 47>" # midichan 4 # s "rytm"
      , sampleend 114 # midichan 4 # s "rytm"
      , one2 0.2 $ while "{f f t f f f t}%16" (off "3e" (|+ note "<4 -4>")) $ struct "{1@41 1@20 1@31}%16" $ midichan "{2 2 3 2 3 3}%16" # s "rytm" # note "c3"
      , slow 7 $ s "rytm" # midichan 8 # note "c3"
      , slow 2 $ (0.5 ~>) $ midichan 1 # s "rytm" # note "{c3 d3 c3 f3}%16"
      , (|+ note "{0 0 0 0 0 0 12}%16") 
        $ sb 0.2 (off "3e" (|+ note "12")) $ (0.25 ~>) $ sb 0.2 (off 0.125 (|+ note 1)) $ slow 4 $ midichan 0 # s "rytm" # note "c3"
    ] # cps (200/120/2)


hush