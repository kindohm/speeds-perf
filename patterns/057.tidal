

do
  let pat = "{1@9 1@5 1@11 1@6 1@6 1@14 1@7}%16"
      shiftChain p = shift $ shift $ shift $ p
  d1
    $ limit
    $ useIter (iter (segment 1 $ shiftBy 3733311 $ choose [4,8,16]))
    $ every 2 rev
    $ stack [
      kickOn $ reduce $ one 0.2 $ one2 0.2 $ roll 0.3 $ struct pat $ midichan 2 # note "c3"
      , kickOn $ perf3 (fast 2 $ segment 1 $ shiftBy 333 $ choose [0,0,0,0,0,0,127])
      , clapOn $ reduce $ shiftChain $ sb 0.4 (off "1q" (# gain 1)) $ struct pat $ midichan 3 # gain 0 # note "c3"
      , perc1On $ reduce $ ("1s" ~>) $ shiftChain $ struct pat $ midichan 6 # note "c3"
      , perc1On $ reduce $ ("3s" ~>) $ shiftChain $ struct pat $ midichan 7 # note "c3"
      , perc1On $ reduce $ ("2s" ~>) $ shiftChain $ struct pat $ midichan 8 # note "c3"
      , perc1On $ perf8 (fast 2 $ segment 1 $ range 0 127 $ shrand 87371)
      -- , perc1On $ perf12 (fast 2 $ segment 1 $ range 0 127 $ shrand 776655)
      -- backbeat
      , perc2On $ roll 0.3 $ fast 2 $ (0.5 ~>) $ midichan 1 # note "c3"
      , perc2On $ ssb 0.1 (# ccv (range 0 127 $ shrand 8293)) $ fast 2 $ (0.5 ~>) $ perf2 "0"
      , hatOn $ reduce $ sb 0.07 (|+ midichan 1) $ struct (binaryN 16 "<23894 3428905 213784923>") $ midichan 10 # note "c3"
      , scene (fast 2 $ segment 1 $ range 0 sceneRange $ shrand 3711000)
    ] # s "rytm" # cps (160/120/2)
  d2 
    $ stack [
      padOn $ slow 4 $ midichan 4 # note "c3"
    ] # s "rytm"



d1 $ fast 2 $ limit $ s "rytm" # midichan 1 # note "c3"

    hush



d1 $ note "{a3@11 c4@13 g3@10 e4@18}%16" # s "rytm" # midichan 0 # legato 0.5