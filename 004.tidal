hush

do 
  let rfreq = segment 0.125
      chain p = one 0.2 $ shift $ one 0.2 $ shift $ one 0.2 
                  $ reduce2 $ struct "1(3,16)" $ p
  d1
    $ cpsDisc minTempo maxTempo
    $ limit
    $ useIter (iter 16)
    $ stack [
      reduce
      $ stack [
        -- kick and harmor off
        harmorOn $ ("3e" ~>) $ (# note "[-24 -12]/16") $ (# legato "{9 7 6 8}%16") $ chain $ harmor # speed004chan
        , kickOn $ chain $ pad2n
        -- soft snare
        , perc1On $ struct "{1 ~ ~ ~ ~ ~}%4" $ pad8n
        -- hard snare
        , clapOn $ iter "<16 8>" $ ((0.0625*3) ~>) $ pad4n
        -- hat
        , perc2On $ slow (slow "<8 4 10 6 3 8 6 2>" $ "<2 1.5 4 4%3 3 8%3>") $ struct "1*12" $ pad11n
      ]
      -- pad
      , padOn $ slow 3 $ pan "1(3,16)" # pad5n
      , perf1 (segment 0.5 $ shiftBy 104 $ choose ([0,0,0,0,0,0,0,0,0,0] ++ [10,20..120]))
      , perf4 (segment 1 $ shiftBy 103 $ range 0 127 $ shrand 82394)
      , perf8 (segment 1 $ shiftBy 105 $ range 0 127 $ rand)
      , scene (segment (1/2) $ range 0 sceneRange $ shrand 9991)
      -- harmor cc's
      , stack [
        ccv (rfreq $ ccrand 10 80 133) # filter1
        , ccv (rfreq $ ccrand 10 80 233) # filter2
        , ccv (rfreq $ ccrand 0 127 333) # unidetune
        , ccv (rfreq $ ccrand 0 64 433) # phwidth
        , ccv (rfreq $ ccrand 24 100 38282) # phspeed
        , ccv (rfreq $ ccrand 5 127 533) # envattack
        , ccv (rfreq $ ccrand 0 127 7283) # envdecay
        , ccv (rfreq $ ccrand 0 127 633 ) # filter1width
        , ccv (rfreq $ ccrand 127 127 733 ) # filter1env
        , ccv (rfreq $ ccrand 0 127 833 ) # filter2width
        , ccv (rfreq $ ccrand 127 127 933 ) # filter2env
        , ccv (rfreq $ ccrand 0 127 1033) # timbre
        , ccv (rfreq $ ccrand 0 0 1133) # amprel
      ] # speed004chan
    ] # cps (160/120/2)



hush

say "there is no 'one'. "