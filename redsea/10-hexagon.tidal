hush

do
  let g p = (const $ s "~") $ p
  let minTempoLocal = (range 1 0.1 $ (cF 0 "88"))
  let maxTempoLocal = (range 1 2 $ (cF 0 "88"))
  let minTempo2Local = (range 1 0.1 $ (cF 0 "72"))
  let maxTempo2Local = (range 1 2 $ (cF 0 "72"))
  d1
    $ (|* cps (range minTempo2Local maxTempo2Local $ slow 4.1 tri))
    $ (|* cps (segment 0.5 $ range minTempoLocal maxTempoLocal $ (111 ~>) $ rand))
    $ limit
    $ (|* cps (range 0.25 1.5 $ slow 10 tri))
    $ (|* cps (segment 1 $ range 0.2 8 $ (4 ~>) $ rand))
    $ useLing doLing
    $ useIter doIter
    $ slow 8
    $ reduce
    $ (4 ~>)
    $ sometimesBy 0.3 (off "1s" (|- note 2))
    $ (1 ~>)
    $ sometimesBy 0.2 (off "1s" (|+ midichan "{1 2 3}%16"))
    $ (3 ~>)
    $ sometimesBy 0.3 (off "1s" (|+ midichan "{1 2 3}%16"))
    $ (12 ~>)
    $ stack [
      kickOn $ midichan (fmap ([0,1,2,3]!!) $ markovPat 8 0 [ [3,3,3,4], [6,7,8,9], [2,3,4,5], [7,8,9,5] ])
        # note "{c3 b3 a3 b2 a2 c2 d2}%20" # legato (range 1 2 $ shrand 37811)
      , hatOn $ struct (binaryN 16 "<28394 23489054 237894>") $ midichan 10 # note "c3"
      , scene  (segment "<1 2 1 4>" $ range 0 sceneRange $ shrand 9991) # midichan 12
    ] # s "rytm" # cps (180/120/2)
  d2 $ harmorOn $ limit $ reduce $ s "harmor" # midichan 9 # note "c3" 
  p "vis" $ fast 4 $ s "base64March" # pan colorProb # orbit 10


    hush

      let minTempoLocal = (range 1 0.1 $ (cF 0 "88"))
  let maxTempoLocal = (range 1 2 $ (cF 0 "88"))
  let minTempo2Local = (range 1 0.1 $ (cF 0 "72"))
  let maxTempo2Local = (range 1 2 $ (cF 0 "72"))
  d1
    $ (|* cps (range minTempo2Local maxTempo2Local $ slow 4.1 tri))
    $ (|* cps (segment 0.5 $ range minTempoLocal maxTempoLocal $ (111 ~>) $ rand))
