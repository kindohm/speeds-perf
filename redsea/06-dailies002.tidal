hush

do 
  let minTempoLocal = (range 1 0.1 $ (cF 0 "88"))
  let maxTempoLocal = (range 1 2 $ (cF 0 "88"))
  let minTempo2Local = (range 1 0.1 $ (cF 0 "72"))
  let maxTempo2Local = (range 1 2 $ (cF 0 "72"))
  d1
    $ (|* cps (range minTempo2Local maxTempo2Local $ slow 4.1 tri))
    $ (|* cps (segment 0.5 $ range minTempoLocal maxTempoLocal $ (111 ~>) $ rand))
    $ useLing doLing
    $ useIter doIter
    $ reduce
    $ (33 ~>)
    $ sometimesBy 0.4 (|+ note "{0 -1 -2 -3 -4 -5 -12 -12 -12}%20")
    $ (33 ~>)
    $ stack [
      kickOn $ sometimesBy 0.2 (off "<1s 1s 1s 3s 1s 3e 1s>" id)
        $ while "{1 0 0 1 0 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 0}%16" (# midichan "{2 3 2 2 2 3}%16")
        $ struct "1(<3 5 3 7>,{16 16 8}%4,<23 11>)"
        $ midichan "{6 7 8 9 10 11}%23" # note "c3"
        # legato (every 2 rev $ foldEvery [3,4] (100 ~>) $ "{2 7 3 6 4 5 6 7}%17")
      , perc1On $ slow "<2 3 1>" $ struct "1(3,8)" $ midichan "{0 1 4 5}%17" # note "c3"
      , scene  (segment "<1 2 1 4>" $ range 0 sceneRange $ shrand 9991) # midichan 12
    ] # s "rytm" # amp 1 # cps (130/120/2)
  p "shep"
      $ harmorOn $ stack [
          slow 4 $ note "c4"
      ] # s "harmor" # midichan 10 # gain 1.15
      
  p "vis" $ s "[emojiCount]" # pan colorProb # orbit 10

    hush        


  let minTempoLocal = (range 1 0.08 $ (cF 0 "88"))
  let maxTempoLocal = (range 1 1.5 $ (cF 0 "88"))
  let minTempo2Local = (range 1 0.1 $ (cF 0 "72"))
  let maxTempo2Local = (range 1 2 $ (cF 0 "72"))
  d1
    $ (|* cps (range minTempo2Local maxTempo2Local $ slow 4.1 tri))
    $ (|* cps (segment 0.5 $ range minTempoLocal maxTempoLocal $ (111 ~>) $ rand))
