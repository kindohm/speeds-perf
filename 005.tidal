hush

do 
  let segpat = "<4%3 2 8%3 3 6%3 2%3>"
      rfreq = segment (1/6)
  d1
    $ limit
    $ stack [
      padOn $ slow 4 $ (|+ note (shiftBy 44 $ choose [0,-1])) $ pad5n
      , useIter (iter 16) $ stack [
        kickOn $ one 0.4 $ roll 0.3 $ slow 5 $ reduce $ fast 2
          $ struct "1(3,16)" $ pad3n # legato (shiftBy 33 $ choose [1,1.1..4])
        , clapOn $ (|+ note (scale "ritusen" (shiftBy 44 $ choose [0,0,0]))) 
        $ slow "<2%3 1 4%3 5%3>" $ (0.5 ~>) $ reduce $ fast 2 $ pad4n
        , harmorOn $ slow 6 $ note "-24"
          # harmor # legato (range 0.5 1 $ shrand 1000) # speed005chan
      ]
      , perf5 (segment segpat $ range "<30 40 50>" "<70 90 80 100>" $ shrand 100)
      , perf6 (slow 9 $ "<0 127>")
      , every 3 (# ccv (range 0 127 $ shrand 773)) $ perf3 0
      , perf4 (segment 1 $ ccrand 0 64 3388)
      , perf8 (segment 1 $ ccrand 0 127 448)
      , perf12 (segment 1 $ range 0 127 $ shrand 4001)
      -- harmor cc's
      , stack [
        ccv (rfreq $ ccrand 10 100 133) # filter1
        , ccv (rfreq $ ccrand 10 100 233) # filter2
        , ccv (rfreq $ ccrand 0 127 333) # unidetune
        , ccv (rfreq $ ccrand 0 64 433) # phwidth
        , ccv (rfreq $ ccrand 40 80 38282) # phspeed
        , ccv (rfreq $ ccrand 5 127 533) # envattack
        , ccv (rfreq $ ccrand 0 127 7283) # envdecay
        , ccv (rfreq $ ccrand 100 127 633 ) # filter1width
        , ccv (rfreq $ ccrand 127 127 733 ) # filter1env
        , ccv (rfreq $ ccrand 100 127 833 ) # filter2width
        , ccv (rfreq $ ccrand 127 127 933 ) # filter2env
        , ccv (rfreq $ ccrand 0 127 1033) # timbre
        , ccv (rfreq $ ccrand 64 64 1133) # amprel
        , ccv (rfreq $ ccrand 0 127 7) # harm
      ] # speed005chan
    ] # cps (140/120/2)

    hush